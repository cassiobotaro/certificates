name: main

on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
          cache: 'poetry'
      - run: poetry install

      - name: Run isort
        shell: bash
        run: python -m poetry run python -m isort --check .

      - name: Run black
        shell: bash
        run: python -m poetry run python -m black --check .
      
      - name: Run flake8
        shell: bash
        run: python -m poetry run python -m flake8 . --exclude=.venv

      - name: Run tests
        shell: bash
        run: python -m poetry run python -m pytest .
  
  release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: 'poetry'
      - run: poetry install

      - name: Configure pypi token
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish to pypi
        shell: bash
        run: python -m poetry publish --build
